pipeline {
    agent { label 'Task_Agent_1' }  // This specifies the agent on which the pipeline will run

    environment {
        DOCKER_HUB_CREDENTIALS = 'docker-cred'  // Jenkins credentials ID for Docker Hub
        IMAGE_NAME = 'ameysalvi5675/py-app'       // Replace with your Docker Hub repo
        TAG = 'latest'                                   // Use the desired image tag (e.g., commit ID or version)
    }

    stages {
        stage('Checkout') {
            steps {
                // Checkout the code from your repository
                git branch: 'main', url: 'https://github.com/ameysalvi5675-boop/Jenkins.git'
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    // Build the Docker image
                    sh """
                        docker build -t ${IMAGE_NAME}:${TAG} .
                    """
                }
            }
        }

        stage('Login to Docker Hub') {
            steps {
                script {
                    // Login to Docker Hub
                    withCredentials([usernamePassword(credentialsId: DOCKER_HUB_CREDENTIALS, usernameVariable: 'DOCKER_USERNAME', passwordVariable: 'DOCKER_PASSWORD')]) {
                        sh "echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin"
                    }
                }
            }
        }

        stage('Push Docker Image') {
            steps {
                script {
                    // Push the Docker image to Docker Hub
                    sh """
                        docker push ${IMAGE_NAME}:${TAG}
                    """
                }
            }
        }

	stage('Pull Docker Image') {
            steps {
                script {
                    // Pull the Docker image from Docker Hub
                    echo "Pulling Docker image ${IMAGE_NAME}:${TAG}"
                    docker.image("${IMAGE_NAME}:${TAG}").pull()
                }
            }
        }

	stage('Run Docker Container') {
            steps {
                script {
                    // Run the Docker container
                    echo "Running the Docker container from ${IMAGE_NAME}:${TAG}"
                    docker.image("${IMAGE_NAME}:${TAG}").run()
                    // Optionally, wait for the container to complete or interact with it
                    // For example, you could run tests, or just leave it running for observation
                    echo "Container is running with ID: ${containerId}"
                }
            }
        }
        stage('Clean Workspace') {
            steps {
                script {
                    echo "Cleaning up workspace..."
                    deleteDir() // Deletes all files in the workspace
                }
            }
        }
    }

    post {
        always {
            // Clean up Docker resources
            sh 'docker system prune -f'
        }
    }
}
