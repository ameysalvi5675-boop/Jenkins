pipeline {
    agent {
        label 'Agent_Part1_Config'  // Specify the agent to run the pipeline
    }
    
    stages {
        stage('Build') {
            steps {
                script {
                    echo 'Starting the build process...'
                    // Build commands (e.g., compile code, install dependencies)
                    sh 'echo "Building project..."'
                    // Add actual build commands here, e.g., `mvn clean install`, `npm install`, etc.
                }
            }
        }

        stage('Test') {
            steps {
                script {
                    echo 'Starting the testing process...'
                    // Test commands (e.g., run unit tests, integration tests)
                    sh 'echo "Running tests..."'
                    // Add actual test commands here, e.g., `mvn test`, `npm test`, etc.
                }
            }
        }

        stage('Deploy') {
            steps {
                script {
                    echo 'Starting the deployment process...'
                    // Deployment commands (e.g., deploy to server, cloud, etc.)
                    sh 'echo "Deploying project..."'
                    // Add actual deployment commands here, e.g., `docker-compose up`, `kubectl apply`, etc.
                }
            }
        }

        stage('Cleanup') {
            steps {
                script {
                    echo 'Cleaning up after the deployment...'
                    // Clean up commands (e.g., delete temporary files, Docker containers, etc.)
                    sh 'echo "Cleanup completed."'
                }
            }
        }
    }
    
    post {
        always {
            echo 'Pipeline execution is complete.'
        }
        success {
            echo 'Pipeline executed successfully!'
        }
        failure {
            echo 'Pipeline execution failed.'
        }
    }
}
